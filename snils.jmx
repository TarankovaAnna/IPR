<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="HOST_SNILS_MOCK" elementType="Argument">
            <stringProp name="Argument.name">HOST_SNILS_MOCK</stringProp>
            <stringProp name="Argument.value">192.168.1.12</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PORT_SNILS_MOCK" elementType="Argument">
            <stringProp name="Argument.name">PORT_SNILS_MOCK</stringProp>
            <stringProp name="Argument.value">8082</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="HOST_POSTGRES" elementType="Argument">
            <stringProp name="Argument.name">HOST_POSTGRES</stringProp>
            <stringProp name="Argument.value">192.168.1.11</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PORT_POSTGRES" elementType="Argument">
            <stringProp name="Argument.name">PORT_POSTGRES</stringProp>
            <stringProp name="Argument.value">5432</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="HOST_INFLUXDB" elementType="Argument">
            <stringProp name="Argument.name">HOST_INFLUXDB</stringProp>
            <stringProp name="Argument.value">192.168.1.2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PORT_INFLUXDB" elementType="Argument">
            <stringProp name="Argument.name">PORT_INFLUXDB</stringProp>
            <stringProp name="Argument.value">8086</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="connectionProperties"></stringProp>
        <stringProp name="dataSource">test</stringProp>
        <stringProp name="dbUrl">jdbc:postgresql://${HOST_POSTGRES}:${PORT_POSTGRES}/iprdb</stringProp>
        <stringProp name="driver">org.postgresql.Driver</stringProp>
        <stringProp name="initQuery"></stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">iprdb</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">iprdb</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="influxdbMetricsSender" elementType="Argument">
              <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
              <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="influxdbUrl" elementType="Argument">
              <stringProp name="Argument.name">influxdbUrl</stringProp>
              <stringProp name="Argument.value">http://${HOST_INFLUXDB}:${PORT_INFLUXDB}/write?db=test_mock</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="application" elementType="Argument">
              <stringProp name="Argument.name">application</stringProp>
              <stringProp name="Argument.value">jmeter_mock</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="measurement" elementType="Argument">
              <stringProp name="Argument.name">measurement</stringProp>
              <stringProp name="Argument.value">jmeter_mock</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="summaryOnly" elementType="Argument">
              <stringProp name="Argument.name">summaryOnly</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersRegex" elementType="Argument">
              <stringProp name="Argument.name">samplersRegex</stringProp>
              <stringProp name="Argument.value">^[^.].*</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="percentiles" elementType="Argument">
              <stringProp name="Argument.name">percentiles</stringProp>
              <stringProp name="Argument.value">99;95;90</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testTitle" elementType="Argument">
              <stringProp name="Argument.name">testTitle</stringProp>
              <stringProp name="Argument.value">Test name</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventTags" elementType="Argument">
              <stringProp name="Argument.name">eventTags</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="TAG_station" elementType="Argument">
              <stringProp name="Argument.name">TAG_station</stringProp>
              <stringProp name="Argument.value">${__machineName}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
      </BackendListener>
      <hashTree/>
      <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="csv all &lt;&lt; Simple Data Writer" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">${__property(data,,)}/${__property(testName,,)}.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="xml errors &lt;&lt; Simple Data Writer" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>false</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">${__property(data,,)}/${__property(testName,,)}.xml</stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="DEBUG" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC Debug" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="158905373">--СЦЕНАРИИ--</stringProp>
            <stringProp name="-274746406">SC Основной</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="jp@gc - Dummy Sampler" enabled="false">
          <boolProp name="WAITING">true</boolProp>
          <boolProp name="SUCCESFULL">false</boolProp>
          <stringProp name="RESPONSE_CODE">500</stringProp>
          <stringProp name="RESPONSE_MESSAGE">KO</stringProp>
          <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
          <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
          <stringProp name="RESPONSE_TIME">${__Random(50,500)}</stringProp>
          <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
          <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          <stringProp name="URL"></stringProp>
          <stringProp name="RESULT_CLASS">org.apache.jmeter.samplers.SampleResult</stringProp>
        </kg.apc.jmeter.samplers.DummySampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.arrivals.FreeFormArrivalsThreadGroup guiclass="com.blazemeter.jmeter.threads.arrivals.FreeFormArrivalsThreadGroupGui" testclass="com.blazemeter.jmeter.threads.arrivals.FreeFormArrivalsThreadGroup" testname="bzm - Free-Form Arrivals Thread Group" enabled="false">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <collectionProp name="Schedule">
          <collectionProp name="805240057">
            <stringProp name="49">1</stringProp>
            <stringProp name="1507423">1000</stringProp>
            <stringProp name="1572771">3600</stringProp>
          </collectionProp>
        </collectionProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">S</stringProp>
        <stringProp name="ConcurrencyLimit">3000</stringProp>
      </com.blazemeter.jmeter.threads.arrivals.FreeFormArrivalsThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC Debug" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="158905373">--СЦЕНАРИИ--</stringProp>
            <stringProp name="-274746406">SC Основной</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.arrivals.FreeFormArrivalsThreadGroup guiclass="com.blazemeter.jmeter.threads.arrivals.FreeFormArrivalsThreadGroupGui" testclass="com.blazemeter.jmeter.threads.arrivals.FreeFormArrivalsThreadGroup" testname="FFA_max" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <collectionProp name="Schedule">
          <collectionProp name="1363055904">
            <stringProp name="48">0</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="1722">60</stringProp>
          </collectionProp>
          <collectionProp name="-1900854932">
            <stringProp name="48687">120</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="610452480">
            <stringProp name="48687">120</stringProp>
            <stringProp name="48749">140</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="-1869998772">
            <stringProp name="48749">140</stringProp>
            <stringProp name="48749">140</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="641332727">
            <stringProp name="48749">140</stringProp>
            <stringProp name="48811">160</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="-1838371828">
            <stringProp name="48811">160</stringProp>
            <stringProp name="48811">160</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="672188887">
            <stringProp name="48811">160</stringProp>
            <stringProp name="48873">180</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="-1831409972">
            <stringProp name="48873">180</stringProp>
            <stringProp name="48873">180</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="709857762">
            <stringProp name="48873">180</stringProp>
            <stringProp name="49586">200</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="-841823508">
            <stringProp name="49586">200</stringProp>
            <stringProp name="49586">200</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="1669483904">
            <stringProp name="49586">200</stringProp>
            <stringProp name="49648">220</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="-810967348">
            <stringProp name="49648">220</stringProp>
            <stringProp name="49648">220</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="1700364151">
            <stringProp name="49648">220</stringProp>
            <stringProp name="49710">240</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="-779340404">
            <stringProp name="49710">240</stringProp>
            <stringProp name="49710">240</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="1731220311">
            <stringProp name="49710">240</stringProp>
            <stringProp name="49772">260</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="-772378548">
            <stringProp name="49772">260</stringProp>
            <stringProp name="49772">260</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="1738928864">
            <stringProp name="49772">260</stringProp>
            <stringProp name="49834">280</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="-741522388">
            <stringProp name="49834">280</stringProp>
            <stringProp name="49834">280</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="-1777646133">
            <stringProp name="49834">280</stringProp>
            <stringProp name="50547">300</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="1735653740">
            <stringProp name="50547">300</stringProp>
            <stringProp name="50547">300</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="-48006144">
            <stringProp name="50547">300</stringProp>
            <stringProp name="50609">320</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="1766509900">
            <stringProp name="50609">320</stringProp>
            <stringProp name="50609">320</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="-17872594">
            <stringProp name="50609">320</stringProp>
            <stringProp name="50671">340</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="1774242540">
            <stringProp name="50671">340</stringProp>
            <stringProp name="50671">340</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="-9417344">
            <stringProp name="50671">340</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="1805098700">
            <stringProp name="50733">360</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="20692119">
            <stringProp name="50733">360</stringProp>
            <stringProp name="50795">380</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="1812060556">
            <stringProp name="50795">380</stringProp>
            <stringProp name="50795">380</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="59107691">
            <stringProp name="50795">380</stringProp>
            <stringProp name="51508">400</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="-1469425972">
            <stringProp name="51508">400</stringProp>
            <stringProp name="51508">400</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="1041158830">
            <stringProp name="51508">400</stringProp>
            <stringProp name="51570">420</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="-1461693332">
            <stringProp name="51570">420</stringProp>
            <stringProp name="51570">420</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="1049614080">
            <stringProp name="51570">420</stringProp>
            <stringProp name="51632">440</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="-1430837172">
            <stringProp name="51632">440</stringProp>
            <stringProp name="51632">440</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="1079723543">
            <stringProp name="51632">440</stringProp>
            <stringProp name="51694">460</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="-1423875316">
            <stringProp name="51694">460</stringProp>
            <stringProp name="51694">460</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="1087432096">
            <stringProp name="51694">460</stringProp>
            <stringProp name="51756">480</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="-1393019156">
            <stringProp name="51756">480</stringProp>
            <stringProp name="51756">480</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="1148248578">
            <stringProp name="51756">480</stringProp>
            <stringProp name="52469">500</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="-403432692">
            <stringProp name="52469">500</stringProp>
            <stringProp name="52469">500</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="2107898807">
            <stringProp name="52469">500</stringProp>
            <stringProp name="52531">520</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="-371805748">
            <stringProp name="52531">520</stringProp>
            <stringProp name="52531">520</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="2138754967">
            <stringProp name="52531">520</stringProp>
            <stringProp name="52593">540</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="-364843892">
            <stringProp name="52593">540</stringProp>
            <stringProp name="52593">540</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="2146463520">
            <stringProp name="52593">540</stringProp>
            <stringProp name="52655">560</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="-333987732">
            <stringProp name="52655">560</stringProp>
            <stringProp name="52655">560</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="-2117647616">
            <stringProp name="52655">560</stringProp>
            <stringProp name="52717">580</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="-303131572">
            <stringProp name="52717">580</stringProp>
            <stringProp name="52717">580</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="-2056807047">
            <stringProp name="52717">580</stringProp>
            <stringProp name="53430">600</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="687225676">
            <stringProp name="53430">600</stringProp>
            <stringProp name="53430">600</stringProp>
            <stringProp name="48687">120</stringProp>
          </collectionProp>
          <collectionProp name="1088801841">
            <stringProp name="53430">600</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1722">60</stringProp>
          </collectionProp>
        </collectionProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="ConcurrencyLimit">1000</stringProp>
        <stringProp name="Unit">S</stringProp>
      </com.blazemeter.jmeter.threads.arrivals.FreeFormArrivalsThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC Debug" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="158905373">--СЦЕНАРИИ--</stringProp>
            <stringProp name="-274746406">SC Основной</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="--СЦЕНАРИИ--" enabled="false"/>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="SC Основной" enabled="true"/>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC SC postgres_read_snils" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="-1630483602">--ФРАГМЕНТЫ--</stringProp>
              <stringProp name="131348034">SC postgres_read_snils</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC SC mock_snils_check" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="-1630483602">--ФРАГМЕНТЫ--</stringProp>
              <stringProp name="65240153">SC mock_snils_check</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="--ФРАГМЕНТЫ--" enabled="false"/>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="SC postgres_read_snils" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="&gt;_postgres_read_snils" enabled="true">
            <stringProp name="dataSource">test</stringProp>
            <stringProp name="query">select snils from iprdb_data
ORDER BY random() LIMIT 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">snils</stringProp>
          </JDBCSampler>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="snils&lt;&lt;&lt;REE" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">snils</stringProp>
              <stringProp name="RegexExtractor.regex">snils\n(.*)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">ERROR_snils</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="109586293">snils</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Ошибка чтения из пула</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="Result Status Action Handler" enabled="true">
              <stringProp name="TestPlan.comments">В случае ошибки при чтении из БД, следующий запрос не выполняется</stringProp>
              <intProp name="OnError.action">1</intProp>
            </ResultAction>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="SC mock_snils_check" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_mock_snils_check" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;snils&quot;: &quot;${snils}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HOST_SNILS_MOCK}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT_SNILS_MOCK}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">snils</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-81871106">&quot;message&quot;: &quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Message error</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
